# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: test_msg.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='test_msg.proto',
  package='bess.pb.test',
  syntax='proto3',
  serialized_pb=_b('\n\x0etest_msg.proto\x12\x0c\x62\x65ss.pb.test\"u\n\x0fUnnestedDictMsg\x12\x35\n\x04\x64ict\x18\x01 \x03(\x0b\x32\'.bess.pb.test.UnnestedDictMsg.DictEntry\x1a+\n\tDictEntry\x12\x0b\n\x03key\x18\x01 \x01(\x05\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\"\x8d\x01\n\rNestedDictMsg\x12(\n\x01\x61\x18\x01 \x01(\x0b\x32\x1d.bess.pb.test.UnnestedDictMsg\x12(\n\x01\x62\x18\x02 \x01(\x0b\x32\x1d.bess.pb.test.UnnestedDictMsg\x12(\n\x01\x63\x18\x03 \x01(\x0b\x32\x1d.bess.pb.test.UnnestedDictMsgb\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_UNNESTEDDICTMSG_DICTENTRY = _descriptor.Descriptor(
  name='DictEntry',
  full_name='bess.pb.test.UnnestedDictMsg.DictEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='bess.pb.test.UnnestedDictMsg.DictEntry.key', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='bess.pb.test.UnnestedDictMsg.DictEntry.value', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=106,
  serialized_end=149,
)

_UNNESTEDDICTMSG = _descriptor.Descriptor(
  name='UnnestedDictMsg',
  full_name='bess.pb.test.UnnestedDictMsg',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dict', full_name='bess.pb.test.UnnestedDictMsg.dict', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_UNNESTEDDICTMSG_DICTENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=32,
  serialized_end=149,
)


_NESTEDDICTMSG = _descriptor.Descriptor(
  name='NestedDictMsg',
  full_name='bess.pb.test.NestedDictMsg',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='a', full_name='bess.pb.test.NestedDictMsg.a', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='b', full_name='bess.pb.test.NestedDictMsg.b', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='c', full_name='bess.pb.test.NestedDictMsg.c', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=152,
  serialized_end=293,
)

_UNNESTEDDICTMSG_DICTENTRY.containing_type = _UNNESTEDDICTMSG
_UNNESTEDDICTMSG.fields_by_name['dict'].message_type = _UNNESTEDDICTMSG_DICTENTRY
_NESTEDDICTMSG.fields_by_name['a'].message_type = _UNNESTEDDICTMSG
_NESTEDDICTMSG.fields_by_name['b'].message_type = _UNNESTEDDICTMSG
_NESTEDDICTMSG.fields_by_name['c'].message_type = _UNNESTEDDICTMSG
DESCRIPTOR.message_types_by_name['UnnestedDictMsg'] = _UNNESTEDDICTMSG
DESCRIPTOR.message_types_by_name['NestedDictMsg'] = _NESTEDDICTMSG

UnnestedDictMsg = _reflection.GeneratedProtocolMessageType('UnnestedDictMsg', (_message.Message,), dict(

  DictEntry = _reflection.GeneratedProtocolMessageType('DictEntry', (_message.Message,), dict(
    DESCRIPTOR = _UNNESTEDDICTMSG_DICTENTRY,
    __module__ = 'test_msg_pb2'
    # @@protoc_insertion_point(class_scope:bess.pb.test.UnnestedDictMsg.DictEntry)
    ))
  ,
  DESCRIPTOR = _UNNESTEDDICTMSG,
  __module__ = 'test_msg_pb2'
  # @@protoc_insertion_point(class_scope:bess.pb.test.UnnestedDictMsg)
  ))
_sym_db.RegisterMessage(UnnestedDictMsg)
_sym_db.RegisterMessage(UnnestedDictMsg.DictEntry)

NestedDictMsg = _reflection.GeneratedProtocolMessageType('NestedDictMsg', (_message.Message,), dict(
  DESCRIPTOR = _NESTEDDICTMSG,
  __module__ = 'test_msg_pb2'
  # @@protoc_insertion_point(class_scope:bess.pb.test.NestedDictMsg)
  ))
_sym_db.RegisterMessage(NestedDictMsg)


_UNNESTEDDICTMSG_DICTENTRY.has_options = True
_UNNESTEDDICTMSG_DICTENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
